// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model informacionUsuario {
  idUsuario        String  @id @unique @default(uuid())
  nombre           String
  apellido         String?
  correo           String
  telefonoPersonal String
  telefonoFamiliar String

  credenciales        credencial[]          @relation("conexionCredencial")
  informacionPersonal informacionPersonal[] @relation("conexionInformacionPersonal")
  condicionesVivienda condicionesvivienda[] @relation("conexionCondicionesVivienda")
  educacion           educacion[]           @relation("conexionEducacion")
  situcionlaboral     situacionlaboral[]    @relation("conexionSituacionLaboral")
  Salud               salud[]               @relation("conexionSalud")

  @@map("informacion_usuario")
}

model credencial {
  idCredencial String @id @unique @default(uuid())
  idUsuario    String
  usuario      String
  contrasena   String
  rol          String @default("user")

  usuarioInformacion informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionCredencial")

  @@map("credencial")
}

model informacionPersonal {
  idinformacionPersonal String @id @unique @default(uuid())
  idUsuario             String

  edad          Int
  genero        String
  estadocivil   String
  hijosnum      Int
  personascargo Int
  vivienda      String
  localidad     String
  tipovivienda  String
  familiaresnum Int
  estrato       Int
  etnico        String

  usuarioInformacionPersonal informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionInformacionPersonal")

  @@map("informacionPersonal")
}

model condicionesvivienda {
  idcondicionesvivienda String @id @unique @default(uuid())
  idUsuario             String
  hacinamiento          String
  violencia             String
  servicios             Json
  problemas             Json
  tipozona              String

  usuarioCondicionesVivienda informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionCondicionesVivienda")

  @@map("condicionesvivienda")
}

model educacion {
  ideducacion      String @id @unique @default(uuid())
  idUsuario        String
  tipocolegio      String
  nivelescolaridad String
  carrera          String
  periodo          String
  motivo           String
  matedificulta    Json
  nivelingles      String

  usuarioeducacion informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionEducacion")

  @@map("educacion")
}

model situacionlaboral {
  idsituacionlaboral String @id @unique @default(uuid())
  idUsuario          String
  situacion          String
  ingresos           String
  sector             String
  jornada            String
  ascenso            String

  usuariosituacionlaboral informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionSituacionLaboral")

  @@map("situacionlaboral")
}

model salud {
  idsalud         String @id @unique @default(uuid())
  idUsuario       String
  enfermecronica  String
  discapacidad    String
  suspsicoactivas String
  alcohol         String
  Internet        String
  nicotina        String
  eps             String
  asispsicologo   String

  usuariosalud informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionSalud")

  @@map("salud")
}
