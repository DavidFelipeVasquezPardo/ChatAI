generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Creacion usuario:-----------------------------------------------------------------------------------------------------------------------------------------------------
model informacionUsuario {
  idUsuario        String  @id @unique @default(uuid())
  nombre           String
  apellido         String?
  correo           String  @unique
  telefonoPersonal String  @unique
  telefonoFamiliar String

  // Relaciones
  chats        chats[]      @relation("conexionChats")
  credenciales credencial[] @relation("conexionCredencial")

  // Sociodemogr치fico
  informacionPersonal informacionPersonal[] @relation("conexionInformacionPersonal")
  condicionesVivienda condicionesvivienda[] @relation("conexionCondicionesVivienda")
  educacion           educacion[]           @relation("conexionEducacion")
  situacionlaboral    situacionlaboral[]    @relation("conexionSituacionLaboral")
  salud               salud[]               @relation("conexionSalud")

  // Tests
  testActual String?
  // Relaci칩n con ghq12
  ghq12      ghq12?
  tests      tests?

  @@map("informacion_usuario")
}

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Asistente Psicologico:------------------------------------------------------------------------------------------------------------------------------------------------
model chats {
  idchat       String   @id @unique @default(uuid())
  idUsuario    String
  fechaHora    DateTime @default(now())
  conversacion Json

  usuarioChats informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionChats")

  @@map("chats")
}

model credencial {
  idCredencial String @id @unique @default(uuid())
  idUsuario    String
  usuario      String
  contrasena   String
  rol          String @default("user")

  usuarioCredencial informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionCredencial")

  @@map("credencial")
}

//Sociodemografico:
model informacionPersonal {
  idinformacionPersonal String @id @unique @default(uuid())
  idUsuario             String

  edad          Int
  sexo          String
  genero        String
  estadocivil   String
  hijosnum      Int
  personascargo Int
  vivienda      String
  localidad     String
  tipovivienda  String
  familiaresnum Int
  estrato       Int
  etnico        String

  usuarioInformacionPersonal informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionInformacionPersonal")

  @@map("informacionPersonal")
}

model condicionesvivienda {
  idcondicionesvivienda String @id @unique @default(uuid())
  idUsuario             String
  hacinamiento          String
  violencia             String
  servicios             Json
  problemas             Json
  tipozona              String

  usuarioCondicionesVivienda informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionCondicionesVivienda")

  @@map("condicionesvivienda")
}

model educacion {
  ideducacion      String @id @unique @default(uuid())
  idUsuario        String
  tipocolegio      String
  nivelescolaridad String
  carrera          String
  periodo          String
  motivo           String
  matedificulta    Json
  nivelingles      String

  usuarioeducacion informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionEducacion")

  @@map("educacion")
}

model situacionlaboral {
  idsituacionlaboral String @id @unique @default(uuid())
  idUsuario          String
  situacion          String
  ingresos           String
  sector             String
  jornada            String
  ascenso            String

  usuariosituacionlaboral informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionSituacionLaboral")

  @@map("situacionlaboral")
}

model salud {
  idsalud         String @id @unique @default(uuid())
  idUsuario       String
  enfermecronica  String
  discapacidad    String
  suspsicoactivas String
  alcohol         String
  Internet        String
  nicotina        String
  eps             String
  asispsicologo   String

  usuariosalud informacionUsuario @relation(fields: [idUsuario], references: [idUsuario], name: "conexionSalud")

  @@map("salud")
}

//GHQ12 + Tests:
model ghq12 {
  idGhq12        String @id @unique @default(uuid())
  telefono       String @unique
  tratDatos      String @default("")
  historial      Json?
  Puntaje        Int    @default(0)
  preguntaActual Int    @default(0)
  resPreg        Json?

  // Relaci칩n con informacionUsuario
  usuario informacionUsuario @relation(fields: [telefono], references: [telefonoPersonal])
}

model tests {
  idGhq12        String @id @unique @default(uuid())
  telefono       String @unique
  tratDatos      String @default("")
  historial      Json?
  Puntaje        Int    @default(0)
  preguntaActual Int    @default(0)
  resPreg        Json?

  // Relaci칩n con informacionUsuario
  usuario informacionUsuario @relation(fields: [telefono], references: [telefonoPersonal])
}

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Agendamientos:------------------------------------------------------------------------------------------------------------------------------------------------